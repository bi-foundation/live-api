# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.12
        environment:
          GO111MODULE: "on"

      - image: circleci/mysql:latest
        environment: # environment variables for primary container
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: factom_live_feed
          MYSQL_USER: ci-user
          MYSQL_PASSWORD: ci-pass

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/bi-foundation/live-feed-api

    steps:
      - checkout

      - restore_cache: # restores saved cache if no changes are detected since last run
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - v1-pkg-cache

      # specify any bash command here prefixed with `run: `
      - run: make fmt-check
      - run: make lint
      - run: make vet
      - run: make clean
      - run: make build
      - run: make test

      - save_cache: # Store cache in the /go/pkg directory
          key: v1-pkg-cache
          paths:
            - "/go/pkg"
            -
      - run:
          name: Install MySQL CLI; Import create table; run an example query
          command: |
            sudo apt-get install default-mysql-client
            mysql -h 127.0.0.1 -u ci-user -p ci-pass factom_live_feed < sql-schema.sql
            mysql -h 127.0.0.1 -u ci-user -p ci-pass --execute="SELECT * FROM factom_live_feed.subscriptions"

      - run:
          name: make run
          environment:
            FACTOM_LIVE_FEED_SUBSCRIPTION_PORT: 8700
            FACTOM_LIVE_FEED_DATABASE_DATABASE: mysql
            FACTOM_LIVE_FEED_DATABASE_CONNECTIONSTRING: circleci-go:circle-test@tcp(127.0.0.1:3306)/factom-live-api
          command: make run
          background: true # keep service running and proceed to next step

      - run:
          name: validate run
          command: |
            sleep 5
            curl --retry 3 --retry-delay 1 -X POST -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"callbackType\": \"HTTP\", \"callbackUrl\": \"https://server.com/events\", \"filters\": { \"NODE_MESSAGE\": { \"filtering\": \"\" } }}" http://localhost:8700/live/feed/v0.1/subscriptions

      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/test-results

  github-release:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - run: curl -sL https://git.io/goreleaser | bash

workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
      - github-release:
          requires:
            - build
