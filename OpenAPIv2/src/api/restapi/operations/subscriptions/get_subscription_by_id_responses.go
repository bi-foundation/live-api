// Code generated by go-swagger; DO NOT EDIT.

package subscriptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/FactomProject/LiveAPI/OpenAPIv2/src/api/models"
)

// GetSubscriptionByIDOKCode is the HTTP code returned for type GetSubscriptionByIDOK
const GetSubscriptionByIDOKCode int = 200

/*GetSubscriptionByIDOK Expected response to a valid request

swagger:response getSubscriptionByIdOK
*/
type GetSubscriptionByIDOK struct {

	/*
	  In: Body
	*/
	Payload models.Subscriptions `json:"body,omitempty"`
}

// NewGetSubscriptionByIDOK creates GetSubscriptionByIDOK with default headers values
func NewGetSubscriptionByIDOK() *GetSubscriptionByIDOK {

	return &GetSubscriptionByIDOK{}
}

// WithPayload adds the payload to the get subscription by Id o k response
func (o *GetSubscriptionByIDOK) WithPayload(payload models.Subscriptions) *GetSubscriptionByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get subscription by Id o k response
func (o *GetSubscriptionByIDOK) SetPayload(payload models.Subscriptions) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSubscriptionByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Subscriptions{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetSubscriptionByIDDefault unexpected error

swagger:response getSubscriptionByIdDefault
*/
type GetSubscriptionByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSubscriptionByIDDefault creates GetSubscriptionByIDDefault with default headers values
func NewGetSubscriptionByIDDefault(code int) *GetSubscriptionByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSubscriptionByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get subscription by Id default response
func (o *GetSubscriptionByIDDefault) WithStatusCode(code int) *GetSubscriptionByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get subscription by Id default response
func (o *GetSubscriptionByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get subscription by Id default response
func (o *GetSubscriptionByIDDefault) WithPayload(payload *models.Error) *GetSubscriptionByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get subscription by Id default response
func (o *GetSubscriptionByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSubscriptionByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
