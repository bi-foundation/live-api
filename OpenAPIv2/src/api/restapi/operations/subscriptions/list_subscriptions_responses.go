// Code generated by go-swagger; DO NOT EDIT.

package subscriptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/FactomProject/LiveAPI/OpenAPIv2/src/api/models"
)

// ListSubscriptionsOKCode is the HTTP code returned for type ListSubscriptionsOK
const ListSubscriptionsOKCode int = 200

/*ListSubscriptionsOK A paged array of subscriptions

swagger:response listSubscriptionsOK
*/
type ListSubscriptionsOK struct {
	/*A link to the next page of responses

	 */
	XNext string `json:"x-next"`

	/*
	  In: Body
	*/
	Payload models.Subscriptions `json:"body,omitempty"`
}

// NewListSubscriptionsOK creates ListSubscriptionsOK with default headers values
func NewListSubscriptionsOK() *ListSubscriptionsOK {

	return &ListSubscriptionsOK{}
}

// WithXNext adds the xNext to the list subscriptions o k response
func (o *ListSubscriptionsOK) WithXNext(xNext string) *ListSubscriptionsOK {
	o.XNext = xNext
	return o
}

// SetXNext sets the xNext to the list subscriptions o k response
func (o *ListSubscriptionsOK) SetXNext(xNext string) {
	o.XNext = xNext
}

// WithPayload adds the payload to the list subscriptions o k response
func (o *ListSubscriptionsOK) WithPayload(payload models.Subscriptions) *ListSubscriptionsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list subscriptions o k response
func (o *ListSubscriptionsOK) SetPayload(payload models.Subscriptions) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListSubscriptionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header x-next

	xNext := o.XNext
	if xNext != "" {
		rw.Header().Set("x-next", xNext)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Subscriptions{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*ListSubscriptionsDefault unexpected error

swagger:response listSubscriptionsDefault
*/
type ListSubscriptionsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListSubscriptionsDefault creates ListSubscriptionsDefault with default headers values
func NewListSubscriptionsDefault(code int) *ListSubscriptionsDefault {
	if code <= 0 {
		code = 500
	}

	return &ListSubscriptionsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list subscriptions default response
func (o *ListSubscriptionsDefault) WithStatusCode(code int) *ListSubscriptionsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list subscriptions default response
func (o *ListSubscriptionsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list subscriptions default response
func (o *ListSubscriptionsDefault) WithPayload(payload *models.Error) *ListSubscriptionsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list subscriptions default response
func (o *ListSubscriptionsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListSubscriptionsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
