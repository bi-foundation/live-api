// Code generated by go-swagger; DO NOT EDIT.

package subscriptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/FactomProject/LiveAPI/OpenAPIv2/src/api/models"
)

// CreateSubscriptionsCreatedCode is the HTTP code returned for type CreateSubscriptionsCreated
const CreateSubscriptionsCreatedCode int = 201

/*CreateSubscriptionsCreated Null response

swagger:response createSubscriptionsCreated
*/
type CreateSubscriptionsCreated struct {
}

// NewCreateSubscriptionsCreated creates CreateSubscriptionsCreated with default headers values
func NewCreateSubscriptionsCreated() *CreateSubscriptionsCreated {

	return &CreateSubscriptionsCreated{}
}

// WriteResponse to the client
func (o *CreateSubscriptionsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

/*CreateSubscriptionsDefault unexpected error

swagger:response createSubscriptionsDefault
*/
type CreateSubscriptionsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateSubscriptionsDefault creates CreateSubscriptionsDefault with default headers values
func NewCreateSubscriptionsDefault(code int) *CreateSubscriptionsDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateSubscriptionsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create subscriptions default response
func (o *CreateSubscriptionsDefault) WithStatusCode(code int) *CreateSubscriptionsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create subscriptions default response
func (o *CreateSubscriptionsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create subscriptions default response
func (o *CreateSubscriptionsDefault) WithPayload(payload *models.Error) *CreateSubscriptionsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create subscriptions default response
func (o *CreateSubscriptionsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateSubscriptionsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
